{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Compartido\\\\proyectos\\\\podcasts\\\\pages\\\\podcast.js\";\nimport React from \"react\";\nimport 'isomorphic-fetch';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var audio_clip = this.props.audio_clip.audio_clip;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Podcasts\"), React.createElement(\"audio\", {\n        controls: true,\n        autoplay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \" \", React.createElement(\"source\", {\n        src: \"\".concat(audio_clip.urls.high_mp3),\n        type: \"audio/mpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), \" asd \"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \" \", audio_clip.title, \"  \"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idPodCast, req, _ref2, audio_clip;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                idPodCast = query.id;\n                _context.next = 4;\n                return fetch(\"https://api.audioboom.com/audio_clips/\".concat(idPodCast, \".mp3\"));\n\n              case 4:\n                req = _context.sent;\n                _context.next = 7;\n                return req.json();\n\n              case 7:\n                _ref2 = _context.sent;\n                audio_clip = _ref2.body;\n                return _context.abrupt(\"return\", {\n                  audio_clip: audio_clip\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["D:\\Compartido\\proyectos\\podcasts\\pages\\podcast.js"],"names":["audio_clip","props","urls","high_mp3","title","query","idPodCast","id","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,kBAAP;;;;;;;;;;;;;;;6BAWa;AAAA,UACCA,UADD,GACgB,KAAKC,KAAL,CAAWD,UAD3B,CACCA,UADD;AAGP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,EAGL;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,QAAQ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0B;AAAQ,QAAA,GAAG,YAAOA,UAAU,CAACE,IAAX,CAAgBC,QAAvB,CAAX;AAAgD,QAAA,IAAI,EAAC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,UAHK,EAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAOH,UAAU,CAACI,KAAlB,OAJK,CAAP;AAMD;;;;;;;;;;;;;AAhB8BC,gBAAAA,K,QAAAA,K;AACzBC,gBAAAA,S,GAAYD,KAAK,CAACE,E;;uBACNC,KAAK,iDAA2CF,SAA3C,U;;;AAAjBG,gBAAAA,G;;uBAC6BA,GAAG,CAACC,IAAJ,E;;;;AAArBV,gBAAAA,U,SAANW,I;iDACC;AAAEX,kBAAAA,UAAU,EAAVA;AAAF,iB;;;;;;;;;;;;;;;;;;;EANgBY,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch'\r\n\r\nexport default class extends React.Component {\r\n\r\n    static async getInitialProps({ query }) {\r\n      let idPodCast = query.id\r\n      let req = await fetch(`https://api.audioboom.com/audio_clips/${ idPodCast }.mp3`)\r\n      let { body: audio_clip } = await req.json()\r\n      return { audio_clip }\r\n    }\r\n\r\n    render() {\r\n      const { audio_clip } = this.props.audio_clip\r\n  \r\n      return <div>\r\n        <header>Podcasts</header>\r\n        \r\n        <audio controls autoplay> <source src={ `${ audio_clip.urls.high_mp3 }` } type=\"audio/mpeg\"></source> asd </audio>\r\n        <h1> { audio_clip.title }  </h1>\r\n      </div>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}