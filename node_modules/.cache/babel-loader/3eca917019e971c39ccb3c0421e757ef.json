{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Compartido\\\\proyectos\\\\podcasts\\\\pages\\\\components\\\\PodcastList.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from 'next/link';\n\nvar ChannelGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChannelGrid, _React$Component);\n\n  function ChannelGrid() {\n    _classCallCheck(this, ChannelGrid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ChannelGrid).apply(this, arguments));\n  }\n\n  _createClass(ChannelGrid, [{\n    key: \"render\",\n    value: function render() {\n      var audioClips = this.props.audioClips;\n      return React.createElement(\"div\", {\n        className: \"jsx-3510812452\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, audioClips.map(function (clip) {\n        return React.createElement(Link, {\n          href: \"/podcast?id=\".concat(clip.id),\n          prefetch: true,\n          key: clip.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          className: \"jsx-3510812452\" + \" \" + 'podcast',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"jsx-3510812452\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, clip.title), React.createElement(\"div\", {\n          className: \"jsx-3510812452\" + \" \" + 'meta',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, Math.ceil(clip.duration / 60), \" minutes\")));\n      }), React.createElement(_JSXStyle, {\n        id: \"3510812452\",\n        __self: this\n      }, \".podcast.jsx-3510812452{display:block;-webkit-text-decoration:none;text-decoration:none;color:#333;padding:15px;border-bottom:1px solid rgba(0,0,0,0.2);cursor:pointer;}.podcast.jsx-3510812452:hover{color:#000;}.podcast.jsx-3510812452 h3.jsx-3510812452{margin:0;}.podcast.jsx-3510812452 .meta.jsx-3510812452{color:#666;margin-top:0.5em;font-size:0.8em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFxDb21wYXJ0aWRvXFxwcm95ZWN0b3NcXHBvZGNhc3RzXFxwYWdlc1xcY29tcG9uZW50c1xcUG9kY2FzdExpc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUI0QixBQUdtQyxBQVFILEFBR0YsQUFHRSxTQUZYLEVBSEEsQUFNaUIsR0FkSSxjQWVMLGdCQUNoQixvQkFmVyxXQUNFLGFBQzJCLHdDQUN6QixlQUNmIiwiZmlsZSI6IkQ6XFxDb21wYXJ0aWRvXFxwcm95ZWN0b3NcXHBvZGNhc3RzXFxwYWdlc1xcY29tcG9uZW50c1xcUG9kY2FzdExpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGFubmVsR3JpZCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgY29uc3QgeyBhdWRpb0NsaXBzIH0gPSB0aGlzLnByb3BzXHJcblxyXG5cclxuICAgICAgICByZXR1cm4gPGRpdj5cclxuICAgICAgICAgICAgeyBhdWRpb0NsaXBzLm1hcCgoY2xpcCkgPT4gKFxyXG4gICAgICAgICAgICAgICAgPExpbmsgaHJlZj17YC9wb2RjYXN0P2lkPSR7Y2xpcC5pZH1gfSBwcmVmZXRjaCBrZXk9e2NsaXAuaWR9PlxyXG4gICAgICAgICAgICAgICAgICA8YSBjbGFzc05hbWU9J3BvZGNhc3QnPlxyXG4gICAgICAgICAgICAgICAgICAgIDxoMz57IGNsaXAudGl0bGUgfTwvaDM+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J21ldGEnPlxyXG4gICAgICAgICAgICAgICAgICAgICAgeyBNYXRoLmNlaWwoY2xpcC5kdXJhdGlvbiAvIDYwKSB9IG1pbnV0ZXNcclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgPC9hPlxyXG4gICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICkpfVxyXG5cclxuICAgICAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgICAgICAucG9kY2FzdCB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtcclxuICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC5wb2RjYXN0OmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLnBvZGNhc3QgaDMge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLnBvZGNhc3QgLm1ldGEge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjNjY2O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDAuNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIH1cclxufSJdfQ== */\\n/*@ sourceURL=D:\\\\Compartido\\\\proyectos\\\\podcasts\\\\pages\\\\components\\\\PodcastList.js */\"));\n    }\n  }]);\n\n  return ChannelGrid;\n}(React.Component);\n\nexport { ChannelGrid as default };","map":{"version":3,"sources":["D:\\Compartido\\proyectos\\podcasts\\pages\\components\\PodcastList.js"],"names":["Link","ChannelGrid","audioClips","props","map","clip","id","title","Math","ceil","duration","React","Component"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;IAEqBC,W;;;;;;;;;;;;;6BACR;AAAA,UACGC,UADH,GACkB,KAAKC,KADvB,CACGD,UADH;AAIL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACDA,UAAU,CAACE,GAAX,CAAe,UAACC,IAAD;AAAA,eACb,oBAAC,IAAD;AAAM,UAAA,IAAI,wBAAiBA,IAAI,CAACC,EAAtB,CAAV;AAAsC,UAAA,QAAQ,MAA9C;AAA+C,UAAA,GAAG,EAAED,IAAI,CAACC,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA,8CAAa,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,IAAI,CAACE,KAAX,CADF,EAEE;AAAA,8CAAe,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIC,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACK,QAAL,GAAgB,EAA1B,CADJ,aAFF,CADF,CADa;AAAA,OAAf,CADC;AAAA;AAAA;AAAA,myFAAP;AAmCH;;;;EAxCoCC,KAAK,CAACC,S;;SAA1BX,W","sourcesContent":["import Link from 'next/link'\r\n\r\nexport default class ChannelGrid extends React.Component {\r\n    render() {\r\n        const { audioClips } = this.props\r\n\r\n\r\n        return <div>\r\n            { audioClips.map((clip) => (\r\n                <Link href={`/podcast?id=${clip.id}`} prefetch key={clip.id}>\r\n                  <a className='podcast'>\r\n                    <h3>{ clip.title }</h3>\r\n                    <div className='meta'>\r\n                      { Math.ceil(clip.duration / 60) } minutes\r\n                    </div>\r\n                  </a>\r\n                </Link>\r\n              ))}\r\n\r\n                <style jsx>{`\r\n                    .podcast {\r\n                    display: block;\r\n                    text-decoration: none;\r\n                    color: #333;\r\n                    padding: 15px;\r\n                    border-bottom: 1px solid rgba(0,0,0,0.2);\r\n                    cursor: pointer;\r\n                    }\r\n                    .podcast:hover {\r\n                    color: #000;\r\n                    }\r\n                    .podcast h3 {\r\n                    margin: 0;\r\n                    }\r\n                    .podcast .meta {\r\n                    color: #666;\r\n                    margin-top: 0.5em;\r\n                    font-size: 0.8em;\r\n                    }\r\n                `}</style>\r\n\r\n        </div>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}