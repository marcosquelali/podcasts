{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Compartido\\\\proyectos\\\\podcasts\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport 'isomorphic-fetch';\nimport Link from 'next/link';\nimport Layout from './components/Layout';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var channels = this.props.channels;\n      return React.createElement(Layout, {\n        title: \"Podcasts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(ChannelGrid, {\n        channels: channels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Podcasts\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var req, _ref, channels;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.audioboom.com/channels/recommended?api_version=2');\n\n              case 2:\n                req = _context.sent;\n                _context.next = 5;\n                return req.json();\n\n              case 5:\n                _ref = _context.sent;\n                channels = _ref.body;\n                return _context.abrupt(\"return\", {\n                  channels: channels\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["D:\\Compartido\\proyectos\\podcasts\\pages\\index.js"],"names":["Link","Layout","channels","props","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;;;;;;;;;;;;;6BASW;AAAA,UACGC,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAGL,aAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAKA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,EAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHG,CAAP;AAMH;;;;;;;;;;;;;;uBAdmBE,KAAK,CAAC,8DAAD,C;;;AAAjBC,gBAAAA,G;;uBAC2BA,GAAG,CAACC,IAAJ,E;;;;AAAnBJ,gBAAAA,Q,QAANK,I;iDACC;AAAEL,kBAAAA,QAAQ,EAARA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAJgBM,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch'\r\nimport Link from 'next/link'\r\nimport Layout from './components/Layout'\r\n\r\nexport default class extends React.Component {\r\n  static async getInitialProps() {\r\n      let req = await fetch('https://api.audioboom.com/channels/recommended?api_version=2')\r\n      let { body: channels } = await req.json()\r\n      return { channels }\r\n  }\r\n\r\n  render() {\r\n      const { channels } = this.props\r\n\r\n      return <Layout title=\"Podcasts\">\r\n          <ChannelGrid channels = { channels } />\r\n\r\n          <header>Podcasts</header>\r\n          \r\n      </Layout>\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}